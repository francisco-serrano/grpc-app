// Code generated by protoc-gen-go. DO NOT EDIT.
// source: decomposition/decompositionpb/decomposition.proto

package decompositionpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DecompositionRequest struct {
	PrimeNumber          int32    `protobuf:"varint,1,opt,name=prime_number,json=primeNumber,proto3" json:"prime_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecompositionRequest) Reset()         { *m = DecompositionRequest{} }
func (m *DecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*DecompositionRequest) ProtoMessage()    {}
func (*DecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b0d241b8170ab2, []int{0}
}

func (m *DecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecompositionRequest.Unmarshal(m, b)
}
func (m *DecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecompositionRequest.Marshal(b, m, deterministic)
}
func (m *DecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecompositionRequest.Merge(m, src)
}
func (m *DecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_DecompositionRequest.Size(m)
}
func (m *DecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecompositionRequest proto.InternalMessageInfo

func (m *DecompositionRequest) GetPrimeNumber() int32 {
	if m != nil {
		return m.PrimeNumber
	}
	return 0
}

type DecompositionResponse struct {
	PrimeElement         int32    `protobuf:"varint,1,opt,name=prime_element,json=primeElement,proto3" json:"prime_element,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecompositionResponse) Reset()         { *m = DecompositionResponse{} }
func (m *DecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*DecompositionResponse) ProtoMessage()    {}
func (*DecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80b0d241b8170ab2, []int{1}
}

func (m *DecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecompositionResponse.Unmarshal(m, b)
}
func (m *DecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecompositionResponse.Marshal(b, m, deterministic)
}
func (m *DecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecompositionResponse.Merge(m, src)
}
func (m *DecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_DecompositionResponse.Size(m)
}
func (m *DecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecompositionResponse proto.InternalMessageInfo

func (m *DecompositionResponse) GetPrimeElement() int32 {
	if m != nil {
		return m.PrimeElement
	}
	return 0
}

func init() {
	proto.RegisterType((*DecompositionRequest)(nil), "decomposition.DecompositionRequest")
	proto.RegisterType((*DecompositionResponse)(nil), "decomposition.DecompositionResponse")
}

func init() {
	proto.RegisterFile("decomposition/decompositionpb/decomposition.proto", fileDescriptor_80b0d241b8170ab2)
}

var fileDescriptor_80b0d241b8170ab2 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4c, 0x49, 0x4d, 0xce,
	0xcf, 0x2d, 0xc8, 0x2f, 0xce, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x47, 0xe1, 0x15, 0x24, 0xa1, 0xf2,
	0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x78, 0x51, 0x04, 0x95, 0x2c, 0xb9, 0x44, 0x5c, 0x90,
	0x05, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x14, 0xb9, 0x78, 0x0a, 0x8a, 0x32, 0x73,
	0x53, 0xe3, 0xf3, 0x4a, 0x73, 0x93, 0x52, 0x8b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0xb8,
	0xc1, 0x62, 0x7e, 0x60, 0x21, 0x25, 0x1b, 0x2e, 0x51, 0x34, 0xad, 0xc5, 0x05, 0xf9, 0x79, 0xc5,
	0xa9, 0x42, 0xca, 0x5c, 0xbc, 0x10, 0xbd, 0xa9, 0x39, 0xa9, 0xb9, 0xa9, 0x79, 0x25, 0x50, 0xcd,
	0x10, 0x03, 0x5d, 0x21, 0x62, 0x46, 0x45, 0x5c, 0x42, 0x01, 0x08, 0xc3, 0x82, 0x53, 0x8b, 0xca,
	0x32, 0x93, 0x53, 0x85, 0x62, 0xb8, 0xb8, 0x91, 0x44, 0x85, 0x94, 0xf5, 0x50, 0xbd, 0x80, 0xcd,
	0xa9, 0x52, 0x2a, 0xf8, 0x15, 0x41, 0x1c, 0xa5, 0xc4, 0x60, 0xc0, 0xe8, 0x24, 0x18, 0xc5, 0x8f,
	0x16, 0x44, 0x49, 0x6c, 0xe0, 0x50, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x36, 0x53, 0xf6,
	0x62, 0x4a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PrimeNumberServiceClient is the client API for PrimeNumberService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrimeNumberServiceClient interface {
	PrimeNumber(ctx context.Context, in *DecompositionRequest, opts ...grpc.CallOption) (PrimeNumberService_PrimeNumberClient, error)
}

type primeNumberServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPrimeNumberServiceClient(cc grpc.ClientConnInterface) PrimeNumberServiceClient {
	return &primeNumberServiceClient{cc}
}

func (c *primeNumberServiceClient) PrimeNumber(ctx context.Context, in *DecompositionRequest, opts ...grpc.CallOption) (PrimeNumberService_PrimeNumberClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PrimeNumberService_serviceDesc.Streams[0], "/decomposition.PrimeNumberService/PrimeNumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &primeNumberServicePrimeNumberClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PrimeNumberService_PrimeNumberClient interface {
	Recv() (*DecompositionResponse, error)
	grpc.ClientStream
}

type primeNumberServicePrimeNumberClient struct {
	grpc.ClientStream
}

func (x *primeNumberServicePrimeNumberClient) Recv() (*DecompositionResponse, error) {
	m := new(DecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PrimeNumberServiceServer is the server API for PrimeNumberService service.
type PrimeNumberServiceServer interface {
	PrimeNumber(*DecompositionRequest, PrimeNumberService_PrimeNumberServer) error
}

// UnimplementedPrimeNumberServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPrimeNumberServiceServer struct {
}

func (*UnimplementedPrimeNumberServiceServer) PrimeNumber(req *DecompositionRequest, srv PrimeNumberService_PrimeNumberServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeNumber not implemented")
}

func RegisterPrimeNumberServiceServer(s *grpc.Server, srv PrimeNumberServiceServer) {
	s.RegisterService(&_PrimeNumberService_serviceDesc, srv)
}

func _PrimeNumberService_PrimeNumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PrimeNumberServiceServer).PrimeNumber(m, &primeNumberServicePrimeNumberServer{stream})
}

type PrimeNumberService_PrimeNumberServer interface {
	Send(*DecompositionResponse) error
	grpc.ServerStream
}

type primeNumberServicePrimeNumberServer struct {
	grpc.ServerStream
}

func (x *primeNumberServicePrimeNumberServer) Send(m *DecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PrimeNumberService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "decomposition.PrimeNumberService",
	HandlerType: (*PrimeNumberServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumber",
			Handler:       _PrimeNumberService_PrimeNumber_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "decomposition/decompositionpb/decomposition.proto",
}
