// Code generated by protoc-gen-go. DO NOT EDIT.
// source: maximum/maximumpb/maximum.proto

package maximumpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MaximumRequest struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumRequest) Reset()         { *m = MaximumRequest{} }
func (m *MaximumRequest) String() string { return proto.CompactTextString(m) }
func (*MaximumRequest) ProtoMessage()    {}
func (*MaximumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a88b7326850c9f2, []int{0}
}

func (m *MaximumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumRequest.Unmarshal(m, b)
}
func (m *MaximumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumRequest.Marshal(b, m, deterministic)
}
func (m *MaximumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumRequest.Merge(m, src)
}
func (m *MaximumRequest) XXX_Size() int {
	return xxx_messageInfo_MaximumRequest.Size(m)
}
func (m *MaximumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumRequest proto.InternalMessageInfo

func (m *MaximumRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type MaximumResponse struct {
	MaxValue             int32    `protobuf:"varint,1,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumResponse) Reset()         { *m = MaximumResponse{} }
func (m *MaximumResponse) String() string { return proto.CompactTextString(m) }
func (*MaximumResponse) ProtoMessage()    {}
func (*MaximumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a88b7326850c9f2, []int{1}
}

func (m *MaximumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumResponse.Unmarshal(m, b)
}
func (m *MaximumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumResponse.Marshal(b, m, deterministic)
}
func (m *MaximumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumResponse.Merge(m, src)
}
func (m *MaximumResponse) XXX_Size() int {
	return xxx_messageInfo_MaximumResponse.Size(m)
}
func (m *MaximumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumResponse proto.InternalMessageInfo

func (m *MaximumResponse) GetMaxValue() int32 {
	if m != nil {
		return m.MaxValue
	}
	return 0
}

func init() {
	proto.RegisterType((*MaximumRequest)(nil), "maximum.MaximumRequest")
	proto.RegisterType((*MaximumResponse)(nil), "maximum.MaximumResponse")
}

func init() { proto.RegisterFile("maximum/maximumpb/maximum.proto", fileDescriptor_8a88b7326850c9f2) }

var fileDescriptor_8a88b7326850c9f2 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xcf, 0x4d, 0xac, 0xc8,
	0xcc, 0x2d, 0xcd, 0xd5, 0x87, 0xd2, 0x05, 0x49, 0x30, 0x96, 0x5e, 0x41, 0x51, 0x7e, 0x49, 0xbe,
	0x10, 0x3b, 0x94, 0xab, 0xa4, 0xc6, 0xc5, 0xe7, 0x0b, 0x61, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x89, 0x70, 0xb1, 0x96, 0x25, 0xe6, 0x94, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xb0,
	0x06, 0x41, 0x38, 0x4a, 0x7a, 0x5c, 0xfc, 0x70, 0x75, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42,
	0xd2, 0x5c, 0x9c, 0xb9, 0x89, 0x15, 0xf1, 0xc8, 0x8a, 0x39, 0x72, 0x13, 0x2b, 0xc2, 0x40, 0x7c,
	0xa3, 0x10, 0xb8, 0xb9, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x4e, 0x5c, 0xec, 0x50,
	0x11, 0x21, 0x71, 0x3d, 0x98, 0x6b, 0x50, 0xed, 0x96, 0x92, 0xc0, 0x94, 0x80, 0x58, 0xa6, 0xc4,
	0xa0, 0xc1, 0x68, 0xc0, 0xe8, 0xc4, 0x1d, 0xc5, 0x09, 0xf7, 0x51, 0x12, 0x1b, 0xd8, 0x2b, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x25, 0x7e, 0x11, 0xed, 0xed, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MaximumServiceClient is the client API for MaximumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MaximumServiceClient interface {
	Maximum(ctx context.Context, opts ...grpc.CallOption) (MaximumService_MaximumClient, error)
}

type maximumServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMaximumServiceClient(cc grpc.ClientConnInterface) MaximumServiceClient {
	return &maximumServiceClient{cc}
}

func (c *maximumServiceClient) Maximum(ctx context.Context, opts ...grpc.CallOption) (MaximumService_MaximumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MaximumService_serviceDesc.Streams[0], "/maximum.MaximumService/Maximum", opts...)
	if err != nil {
		return nil, err
	}
	x := &maximumServiceMaximumClient{stream}
	return x, nil
}

type MaximumService_MaximumClient interface {
	Send(*MaximumRequest) error
	Recv() (*MaximumResponse, error)
	grpc.ClientStream
}

type maximumServiceMaximumClient struct {
	grpc.ClientStream
}

func (x *maximumServiceMaximumClient) Send(m *MaximumRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *maximumServiceMaximumClient) Recv() (*MaximumResponse, error) {
	m := new(MaximumResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MaximumServiceServer is the server API for MaximumService service.
type MaximumServiceServer interface {
	Maximum(MaximumService_MaximumServer) error
}

// UnimplementedMaximumServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMaximumServiceServer struct {
}

func (*UnimplementedMaximumServiceServer) Maximum(srv MaximumService_MaximumServer) error {
	return status.Errorf(codes.Unimplemented, "method Maximum not implemented")
}

func RegisterMaximumServiceServer(s *grpc.Server, srv MaximumServiceServer) {
	s.RegisterService(&_MaximumService_serviceDesc, srv)
}

func _MaximumService_Maximum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MaximumServiceServer).Maximum(&maximumServiceMaximumServer{stream})
}

type MaximumService_MaximumServer interface {
	Send(*MaximumResponse) error
	Recv() (*MaximumRequest, error)
	grpc.ServerStream
}

type maximumServiceMaximumServer struct {
	grpc.ServerStream
}

func (x *maximumServiceMaximumServer) Send(m *MaximumResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *maximumServiceMaximumServer) Recv() (*MaximumRequest, error) {
	m := new(MaximumRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MaximumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "maximum.MaximumService",
	HandlerType: (*MaximumServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Maximum",
			Handler:       _MaximumService_Maximum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "maximum/maximumpb/maximum.proto",
}
