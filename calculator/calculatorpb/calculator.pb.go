// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	FirstElement         int32    `protobuf:"varint,1,opt,name=first_element,json=firstElement,proto3" json:"first_element,omitempty"`
	SecondElement        int32    `protobuf:"varint,2,opt,name=second_element,json=secondElement,proto3" json:"second_element,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstElement() int32 {
	if m != nil {
		return m.FirstElement
	}
	return 0
}

func (m *SumRequest) GetSecondElement() int32 {
	if m != nil {
		return m.SecondElement
	}
	return 0
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type AverageRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageRequest) Reset()         { *m = AverageRequest{} }
func (m *AverageRequest) String() string { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()    {}
func (*AverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *AverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageRequest.Unmarshal(m, b)
}
func (m *AverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageRequest.Marshal(b, m, deterministic)
}
func (m *AverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageRequest.Merge(m, src)
}
func (m *AverageRequest) XXX_Size() int {
	return xxx_messageInfo_AverageRequest.Size(m)
}
func (m *AverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageRequest proto.InternalMessageInfo

func (m *AverageRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AverageResponse struct {
	Result               *wrappers.DoubleValue `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AverageResponse) Reset()         { *m = AverageResponse{} }
func (m *AverageResponse) String() string { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()    {}
func (*AverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *AverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageResponse.Unmarshal(m, b)
}
func (m *AverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageResponse.Marshal(b, m, deterministic)
}
func (m *AverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageResponse.Merge(m, src)
}
func (m *AverageResponse) XXX_Size() int {
	return xxx_messageInfo_AverageResponse.Size(m)
}
func (m *AverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageResponse proto.InternalMessageInfo

func (m *AverageResponse) GetResult() *wrappers.DoubleValue {
	if m != nil {
		return m.Result
	}
	return nil
}

type DecompositionRequest struct {
	PrimeNumber          int32    `protobuf:"varint,1,opt,name=prime_number,json=primeNumber,proto3" json:"prime_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecompositionRequest) Reset()         { *m = DecompositionRequest{} }
func (m *DecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*DecompositionRequest) ProtoMessage()    {}
func (*DecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{4}
}

func (m *DecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecompositionRequest.Unmarshal(m, b)
}
func (m *DecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecompositionRequest.Marshal(b, m, deterministic)
}
func (m *DecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecompositionRequest.Merge(m, src)
}
func (m *DecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_DecompositionRequest.Size(m)
}
func (m *DecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecompositionRequest proto.InternalMessageInfo

func (m *DecompositionRequest) GetPrimeNumber() int32 {
	if m != nil {
		return m.PrimeNumber
	}
	return 0
}

type DecompositionResponse struct {
	PrimeElement         int32    `protobuf:"varint,1,opt,name=prime_element,json=primeElement,proto3" json:"prime_element,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecompositionResponse) Reset()         { *m = DecompositionResponse{} }
func (m *DecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*DecompositionResponse) ProtoMessage()    {}
func (*DecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{5}
}

func (m *DecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecompositionResponse.Unmarshal(m, b)
}
func (m *DecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecompositionResponse.Marshal(b, m, deterministic)
}
func (m *DecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecompositionResponse.Merge(m, src)
}
func (m *DecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_DecompositionResponse.Size(m)
}
func (m *DecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecompositionResponse proto.InternalMessageInfo

func (m *DecompositionResponse) GetPrimeElement() int32 {
	if m != nil {
		return m.PrimeElement
	}
	return 0
}

type MaximumRequest struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumRequest) Reset()         { *m = MaximumRequest{} }
func (m *MaximumRequest) String() string { return proto.CompactTextString(m) }
func (*MaximumRequest) ProtoMessage()    {}
func (*MaximumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{6}
}

func (m *MaximumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumRequest.Unmarshal(m, b)
}
func (m *MaximumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumRequest.Marshal(b, m, deterministic)
}
func (m *MaximumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumRequest.Merge(m, src)
}
func (m *MaximumRequest) XXX_Size() int {
	return xxx_messageInfo_MaximumRequest.Size(m)
}
func (m *MaximumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumRequest proto.InternalMessageInfo

func (m *MaximumRequest) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type MaximumResponse struct {
	MaxValue             int32    `protobuf:"varint,1,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaximumResponse) Reset()         { *m = MaximumResponse{} }
func (m *MaximumResponse) String() string { return proto.CompactTextString(m) }
func (*MaximumResponse) ProtoMessage()    {}
func (*MaximumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{7}
}

func (m *MaximumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaximumResponse.Unmarshal(m, b)
}
func (m *MaximumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaximumResponse.Marshal(b, m, deterministic)
}
func (m *MaximumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaximumResponse.Merge(m, src)
}
func (m *MaximumResponse) XXX_Size() int {
	return xxx_messageInfo_MaximumResponse.Size(m)
}
func (m *MaximumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MaximumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MaximumResponse proto.InternalMessageInfo

func (m *MaximumResponse) GetMaxValue() int32 {
	if m != nil {
		return m.MaxValue
	}
	return 0
}

type SquareRootRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootRequest) Reset()         { *m = SquareRootRequest{} }
func (m *SquareRootRequest) String() string { return proto.CompactTextString(m) }
func (*SquareRootRequest) ProtoMessage()    {}
func (*SquareRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{8}
}

func (m *SquareRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootRequest.Unmarshal(m, b)
}
func (m *SquareRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootRequest.Marshal(b, m, deterministic)
}
func (m *SquareRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootRequest.Merge(m, src)
}
func (m *SquareRootRequest) XXX_Size() int {
	return xxx_messageInfo_SquareRootRequest.Size(m)
}
func (m *SquareRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootRequest proto.InternalMessageInfo

func (m *SquareRootRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type SquareRootResponse struct {
	NumberRoot           float64  `protobuf:"fixed64,1,opt,name=number_root,json=numberRoot,proto3" json:"number_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareRootResponse) Reset()         { *m = SquareRootResponse{} }
func (m *SquareRootResponse) String() string { return proto.CompactTextString(m) }
func (*SquareRootResponse) ProtoMessage()    {}
func (*SquareRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{9}
}

func (m *SquareRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareRootResponse.Unmarshal(m, b)
}
func (m *SquareRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareRootResponse.Marshal(b, m, deterministic)
}
func (m *SquareRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareRootResponse.Merge(m, src)
}
func (m *SquareRootResponse) XXX_Size() int {
	return xxx_messageInfo_SquareRootResponse.Size(m)
}
func (m *SquareRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SquareRootResponse proto.InternalMessageInfo

func (m *SquareRootResponse) GetNumberRoot() float64 {
	if m != nil {
		return m.NumberRoot
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*AverageRequest)(nil), "calculator.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "calculator.AverageResponse")
	proto.RegisterType((*DecompositionRequest)(nil), "calculator.DecompositionRequest")
	proto.RegisterType((*DecompositionResponse)(nil), "calculator.DecompositionResponse")
	proto.RegisterType((*MaximumRequest)(nil), "calculator.MaximumRequest")
	proto.RegisterType((*MaximumResponse)(nil), "calculator.MaximumResponse")
	proto.RegisterType((*SquareRootRequest)(nil), "calculator.SquareRootRequest")
	proto.RegisterType((*SquareRootResponse)(nil), "calculator.SquareRootResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x54, 0x4d, 0x61, 0x9c, 0xa4, 0xea, 0xaa, 0x04, 0xe4, 0x42, 0x69, 0x5d, 0x15, 0x45,
	0x42, 0x72, 0xaa, 0x02, 0x12, 0x48, 0xbc, 0x00, 0xe5, 0xf2, 0x52, 0x84, 0x12, 0xa9, 0x42, 0xbc,
	0x44, 0x6b, 0x33, 0x8d, 0x2c, 0x79, 0xbd, 0xee, 0xae, 0x37, 0xe4, 0x0b, 0xf8, 0x6e, 0x94, 0xbd,
	0xf8, 0x46, 0xa0, 0x6f, 0x9e, 0x33, 0x67, 0xcf, 0xcc, 0x9c, 0x19, 0xc3, 0x38, 0xa1, 0x59, 0xa2,
	0x32, 0x5a, 0x72, 0x31, 0xa9, 0x3f, 0x8b, 0xb8, 0x11, 0x44, 0x85, 0xe0, 0x25, 0x27, 0x50, 0x23,
	0xc1, 0xe1, 0x82, 0xf3, 0x45, 0x86, 0x13, 0x9d, 0x89, 0xd5, 0xf5, 0xe4, 0x97, 0xa0, 0x45, 0x81,
	0x42, 0x1a, 0x6e, 0xf8, 0x1d, 0x60, 0xa6, 0xd8, 0x14, 0x6f, 0x14, 0xca, 0x92, 0x9c, 0xc0, 0xe0,
	0x3a, 0x15, 0xb2, 0x9c, 0x63, 0x86, 0x0c, 0xf3, 0xf2, 0x91, 0x77, 0xe4, 0x8d, 0xb7, 0xa7, 0x7d,
	0x0d, 0x7e, 0x34, 0x18, 0x39, 0x85, 0xa1, 0xc4, 0x84, 0xe7, 0x3f, 0x2b, 0xd6, 0x5d, 0xcd, 0x1a,
	0x18, 0xd4, 0xd2, 0xc2, 0x53, 0xf0, 0xb5, 0xb2, 0x2c, 0x78, 0x2e, 0x91, 0x8c, 0xa0, 0x27, 0x50,
	0xaa, 0xcc, 0x69, 0xda, 0x28, 0x1c, 0xc3, 0xf0, 0xdd, 0x12, 0x05, 0x5d, 0xa0, 0x6b, 0x62, 0x04,
	0xbd, 0x5c, 0xb1, 0x18, 0x85, 0x63, 0x9a, 0x28, 0xfc, 0x0c, 0xbb, 0x15, 0xd3, 0x8a, 0xbe, 0x6c,
	0x89, 0xfa, 0xe7, 0x8f, 0x23, 0x33, 0x6e, 0xe4, 0xc6, 0x8d, 0x2e, 0xb8, 0x8a, 0x33, 0xbc, 0xa2,
	0x99, 0xc2, 0xaa, 0xe4, 0x1b, 0xd8, 0xbf, 0xc0, 0x84, 0xb3, 0x82, 0xcb, 0xb4, 0x4c, 0x79, 0xee,
	0x0a, 0x1f, 0x43, 0xbf, 0x10, 0x29, 0xc3, 0x79, 0xab, 0xbc, 0xaf, 0xb1, 0xaf, 0xa6, 0x87, 0xb7,
	0xf0, 0xa0, 0xf3, 0xd4, 0x76, 0x72, 0x02, 0x03, 0xf3, 0xb6, 0xe3, 0x9c, 0x06, 0x9d, 0x25, 0xcf,
	0x60, 0x78, 0x49, 0x57, 0x29, 0xab, 0x0d, 0xdf, 0x87, 0xed, 0xe5, 0xba, 0x37, 0x4b, 0x37, 0x41,
	0x18, 0xc1, 0x6e, 0xc5, 0xb3, 0xfa, 0x07, 0x70, 0x9f, 0xd1, 0xd5, 0xbc, 0x49, 0xbe, 0xc7, 0xe8,
	0x4a, 0x0f, 0x16, 0x3e, 0x87, 0xbd, 0xd9, 0x8d, 0xa2, 0x02, 0xa7, 0x9c, 0x97, 0xb7, 0xd9, 0xf8,
	0x0a, 0x48, 0x93, 0x6c, 0xf5, 0x9f, 0x82, 0x6f, 0xf2, 0x73, 0xc1, 0xb9, 0xe9, 0xde, 0x9b, 0x82,
	0x81, 0xd6, 0xc4, 0xf3, 0xdf, 0x5b, 0xb0, 0xf7, 0xa1, 0xba, 0xab, 0x19, 0x8a, 0x65, 0x9a, 0x20,
	0x79, 0x0d, 0x5b, 0x33, 0xc5, 0xc8, 0x28, 0x6a, 0x1c, 0x61, 0x7d, 0x4f, 0xc1, 0xc3, 0xbf, 0x70,
	0x53, 0x2e, 0xbc, 0x43, 0xae, 0xc0, 0xff, 0x56, 0x1b, 0x4b, 0x8e, 0x9a, 0xcc, 0x4d, 0xdb, 0x09,
	0x8e, 0xff, 0xc3, 0x70, 0xaa, 0x67, 0x1e, 0xf9, 0x04, 0x3b, 0xf6, 0x4a, 0x48, 0xd0, 0x7c, 0xd1,
	0x3e, 0xb2, 0xe0, 0x60, 0x63, 0xce, 0xe9, 0x8c, 0x3d, 0xf2, 0x05, 0x76, 0xec, 0x0e, 0xda, 0x3a,
	0xed, 0x05, 0xb6, 0x75, 0x3a, 0x4b, 0x5b, 0xeb, 0x9c, 0x79, 0xe4, 0x12, 0xa0, 0x36, 0x9c, 0x3c,
	0x69, 0x59, 0xd2, 0xdd, 0x5a, 0x70, 0xf8, 0xaf, 0xb4, 0x93, 0x7c, 0x3f, 0xfc, 0xd1, 0x6f, 0xfe,
	0xfe, 0x71, 0x4f, 0xdf, 0xfa, 0x8b, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x97, 0xc7, 0xf1, 0x2d,
	0x20, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	PrimeNumber(ctx context.Context, in *DecompositionRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberClient, error)
	Average(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageClient, error)
	Maximum(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_MaximumClient, error)
	// error handling
	// this RPC will throw an exception if the sent number is negative
	// The error being sent is of type INVALID_ARGUMENT
	SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error)
}

type calculatorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculatorServiceClient(cc grpc.ClientConnInterface) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) PrimeNumber(ctx context.Context, in *DecompositionRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/PrimeNumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServicePrimeNumberClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_PrimeNumberClient interface {
	Recv() (*DecompositionResponse, error)
	grpc.ClientStream
}

type calculatorServicePrimeNumberClient struct {
	grpc.ClientStream
}

func (x *calculatorServicePrimeNumberClient) Recv() (*DecompositionResponse, error) {
	m := new(DecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) Average(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/Average", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceAverageClient{stream}
	return x, nil
}

type CalculatorService_AverageClient interface {
	Send(*AverageRequest) error
	CloseAndRecv() (*AverageResponse, error)
	grpc.ClientStream
}

type calculatorServiceAverageClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceAverageClient) Send(m *AverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceAverageClient) CloseAndRecv() (*AverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) Maximum(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_MaximumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[2], "/calculator.CalculatorService/Maximum", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceMaximumClient{stream}
	return x, nil
}

type CalculatorService_MaximumClient interface {
	Send(*MaximumRequest) error
	Recv() (*MaximumResponse, error)
	grpc.ClientStream
}

type calculatorServiceMaximumClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceMaximumClient) Send(m *MaximumRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceMaximumClient) Recv() (*MaximumResponse, error) {
	m := new(MaximumResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error) {
	out := new(SquareRootResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	PrimeNumber(*DecompositionRequest, CalculatorService_PrimeNumberServer) error
	Average(CalculatorService_AverageServer) error
	Maximum(CalculatorService_MaximumServer) error
	// error handling
	// this RPC will throw an exception if the sent number is negative
	// The error being sent is of type INVALID_ARGUMENT
	SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error)
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServiceServer) PrimeNumber(req *DecompositionRequest, srv CalculatorService_PrimeNumberServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeNumber not implemented")
}
func (*UnimplementedCalculatorServiceServer) Average(srv CalculatorService_AverageServer) error {
	return status.Errorf(codes.Unimplemented, "method Average not implemented")
}
func (*UnimplementedCalculatorServiceServer) Maximum(srv CalculatorService_MaximumServer) error {
	return status.Errorf(codes.Unimplemented, "method Maximum not implemented")
}
func (*UnimplementedCalculatorServiceServer) SquareRoot(ctx context.Context, req *SquareRootRequest) (*SquareRootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquareRoot not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_PrimeNumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).PrimeNumber(m, &calculatorServicePrimeNumberServer{stream})
}

type CalculatorService_PrimeNumberServer interface {
	Send(*DecompositionResponse) error
	grpc.ServerStream
}

type calculatorServicePrimeNumberServer struct {
	grpc.ServerStream
}

func (x *calculatorServicePrimeNumberServer) Send(m *DecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_Average_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).Average(&calculatorServiceAverageServer{stream})
}

type CalculatorService_AverageServer interface {
	SendAndClose(*AverageResponse) error
	Recv() (*AverageRequest, error)
	grpc.ServerStream
}

type calculatorServiceAverageServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceAverageServer) SendAndClose(m *AverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceAverageServer) Recv() (*AverageRequest, error) {
	m := new(AverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_Maximum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).Maximum(&calculatorServiceMaximumServer{stream})
}

type CalculatorService_MaximumServer interface {
	Send(*MaximumResponse) error
	Recv() (*MaximumRequest, error)
	grpc.ServerStream
}

type calculatorServiceMaximumServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceMaximumServer) Send(m *MaximumResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceMaximumServer) Recv() (*MaximumRequest, error) {
	m := new(MaximumRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).SquareRoot(ctx, req.(*SquareRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
		{
			MethodName: "SquareRoot",
			Handler:    _CalculatorService_SquareRoot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumber",
			Handler:       _CalculatorService_PrimeNumber_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Average",
			Handler:       _CalculatorService_Average_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Maximum",
			Handler:       _CalculatorService_Maximum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
